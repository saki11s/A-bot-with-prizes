from telebot import TeleBot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from logic import *
import schedule
import threading
import time
import os
from config import * 


bot = TeleBot(API_TOKEN)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º DatabaseManager
manager = DatabaseManager(DATABASE)

# –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
manager.create_tables()

# –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–∑—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ 'img' –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞, –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞
try:
    if os.path.exists('img'):
        prizes_img = [f for f in os.listdir('img') if os.path.isfile(os.path.join('img', f))]
        data = [(x,) for x in prizes_img]

        if data:
            manager.add_prize(data)
            print(f"–ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å {len(data)} –ø—Ä–∏–∑–æ–≤ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ 'img'.")
        else:
            print("–ö–∞—Ç–∞–ª–æ–≥ 'img' –ø—É—Å—Ç. –ü—Ä–∏–∑—ã –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.")
    else:
        print("–û—à–∏–±–∫–∞: –ö–∞—Ç–∞–ª–æ–≥ 'img' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–∏–∑—ã –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω—ã. –°–æ–∑–¥–∞–π—Ç–µ –∫–∞—Ç–∞–ª–æ–≥ 'img' –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ —Ç—É–¥–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")

except Exception as e:
    print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–∏–∑–æ–≤ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ 'img': {e}")


def gen_markup(prize_id):
    markup = InlineKeyboardMarkup()
    markup.row_width = 1
    markup.add(InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å!", callback_data=str(prize_id)))
    return markup

@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    bot.answer_callback_query(call.id)

    try:
        prize_id = int(call.data)
    except ValueError:
        print(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞: {call.data}")
        bot.send_message(call.message.chat.id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–∏–∑–∞.")
        return

    user_id = call.message.chat.id

    add_status = manager.add_winner(user_id, prize_id)

    if add_status == 1:
        img_filename = manager.get_prize_img(prize_id)
        if img_filename:
            try:
                bot.delete_message(call.message.chat.id, call.message.message_id)
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (–≤–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º –µ–≥–æ —É–¥–∞–ª–∏–ª): {e}")

            try:
                image_path = f'img/{img_filename}'
                if os.path.exists(image_path):
                     with open(image_path, 'rb') as photo:
                          bot.send_photo(user_id, photo, caption="–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ—Ç –ø—Ä–∏–∑!")
                else:
                     bot.send_message(user_id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–∑, –Ω–æ —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
                     print(f"–û—à–∏–±–∫–∞: –§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—é: {image_path}")

            except Exception as e:
                 bot.send_message(user_id, f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–∑, –Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
                 print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—é {user_id} –ø—Ä–∏–∑–∞ {prize_id}: {e}")

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–∏–∑–æ–≤
            total_prizes_count = manager.get_total_prizes_count()
            user_won_count = manager.get_user_won_prizes_count(user_id)

            if total_prizes_count > 0 and user_won_count >= total_prizes_count:
                 bot.send_message(user_id, """üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ
–í—ã –ø–æ–ª—É—á–∏–ª–∏ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–∏–∑—ã –≤ —ç—Ç–æ–º —Ä–æ–∑—ã–≥—Ä—ã—à–µ!
–ù–æ–≤—ã—Ö –ø—Ä–∏–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –±–æ—Ç–∞ - –≤–æ–∑–º–æ–∂–Ω–æ, —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ –ø—Ä–∏–∑—ã!""")
                 print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–ª—É—á–∏–ª –≤—Å–µ {total_prizes_count} –ø—Ä–∏–∑–æ–≤.")


    elif add_status == 0:
        try:
             bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ—Ç –ø—Ä–∏–∑ —Ä–∞–Ω–µ–µ.",
                reply_markup=None
            )
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (—É–∂–µ –ø–æ–ª—É—á–µ–Ω–æ —Ä–∞–Ω–µ–µ): {e}")
            bot.send_message(user_id, "–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ—Ç –ø—Ä–∏–∑ —Ä–∞–Ω–µ–µ.")


    elif add_status == -1:
        try:
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–£–≤—ã, —ç—Ç–æ—Ç –ø—Ä–∏–∑ —É–∂–µ –∑–∞–±—Ä–∞–ª–∏ :(",
                reply_markup=None
            )
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (–ø—Ä–∏–∑ –∑–∞–±—Ä–∞–Ω): {e}")
            bot.send_message(user_id, "–£–≤—ã, —ç—Ç–æ—Ç –ø—Ä–∏–∑ —É–∂–µ –∑–∞–±—Ä–∞–ª–∏ :(")


def send_message():
    available_prize = manager.get_random_prize()

    if available_prize:
        prize_id, img_filename = available_prize

        source_img_path = f'img/{img_filename}'
        hidden_img_path = f'hidden_img/{img_filename}'

        if not os.path.exists(source_img_path):
             print(f"–û—à–∏–±–∫–∞: –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è: {source_img_path}. –ü—Ä–æ–ø—É—Å–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —ç—Ç–æ–≥–æ –ø—Ä–∏–∑–∞.")
             return

        hide_img(img_filename)

        if not os.path.exists(hidden_img_path):
             print(f"–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–∫—Ä—ã—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {hidden_img_path}. –ü—Ä–æ–ø—É—Å–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —ç—Ç–æ–≥–æ –ø—Ä–∏–∑–∞.")
             return

        users = manager.get_users()
        if not users:
            print("–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–∑–∞.")
            return

        print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–∑–∞ ID {prize_id} ({img_filename}) {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...")

        try:
            with open(hidden_img_path, 'rb') as photo_file:
                for user_id in users:
                    try:
                         bot.send_photo(user_id, photo_file, caption="–ù–æ–≤—ã–π –ø—Ä–∏–∑ –¥–æ—Å—Ç—É–ø–µ–Ω! –£—Å–ø–µ–π –ø–æ–ª—É—á–∏—Ç—å!", reply_markup=gen_markup(prize_id))
                         photo_file.seek(0)

                    except Exception as e:
                         print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} –¥–ª—è –ø—Ä–∏–∑–∞ {prize_id}: {e}")

        except FileNotFoundError:
             print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –§–∞–π–ª —Å–∫—Ä—ã—Ç–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–Ω–µ–∑–∞–ø–Ω–æ –∏—Å—á–µ–∑: {hidden_img_path}")
        except Exception as e:
             print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–∫—Ä—ã—Ç—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–∏–∑–∞ {prize_id}: {e}")

    else:
        print("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∏–∑–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")


def shedule_thread():
    schedule.every(30).minutes.do(send_message) # –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
    print("–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω, –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–∑–æ–≤ –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç.")
    while True:
        schedule.run_pending()
        time.sleep(1)


@bot.message_handler(commands=['start'])
def handle_start(message):
    user_id = message.chat.id
    user_name = message.from_user.username if message.from_user.username else f"user_{user_id}"
    if manager.add_user(user_id, user_name):
        bot.reply_to(message, """–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!
–¢–µ–±—è —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏!
–ö–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç —Ç–µ–±–µ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –Ω–æ–≤—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏ —É —Ç–µ–±—è –±—É–¥–µ—Ç —à–∞–Ω—Å –∏—Ö –ø–æ–ª—É—á–∏—Ç—å!
–î–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –≤—Å–µ—Ö –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É '–ü–æ–ª—É—á–∏—Ç—å!'

–¢–æ–ª—å–∫–æ —Ç—Ä–∏ –ø–µ—Ä–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–∞—Ç –∫–∞—Ä—Ç–∏–Ω–∫—É!)""") # –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏
    else:
        bot.reply_to(message, "–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")


def polling_thread():
    print("–ü–æ–ª–ª–∏–Ω–≥ –±–æ—Ç–∞ –∑–∞–ø—É—â–µ–Ω...")
    bot.polling(none_stop=True, interval=2, timeout=20)


if __name__ == '__main__':
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞, —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–∑–æ–≤
    # –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ bot.py.

    polling_thread = threading.Thread(target=polling_thread)
    polling_thread.daemon = True
    polling_thread.start()

    shedule_thread = threading.Thread(target=shedule_thread)
    shedule_thread.daemon = True
    shedule_thread.start()

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")

    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
    print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")